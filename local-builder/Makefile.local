#!/bin/bash

# ===========================================================
# Author:   Marcos Lin
# Created:  14 Dec 2018
#
# Makefile used to create a node based image to build projects
#
# ===========================================================

include make.common

LOCAL_DIR          := $(ROOT_DIR)/local-builder
YARN_CACHE         := $(HOME)/.fp8-node-builder/yarncache
SSH_KEY_FILE       := $(BUILD_DIR)/id_git_rsa.key

IMAGE_NAME         := local-node-builder
CONTAINER_NAME     := $(IMAGE_NAME)-inst
IMAGE_BUILD_CHECK  := $(BUILD_DIR)/docker.local.built

IMAGE_ID            = $(shell docker images -qf"reference=$(IMAGE_NAME)")
CONTAINER_ID        = $(shell docker ps -aqf"name=$(CONTAINER_NAME)")

# ------------------
# MAIN TARGETS
$(YARN_CACHE) :
	mkdir -p $@

$(SSH_KEY_FILE) : $(BUILD_DIR)
ifeq (${FP8_GIT_SSHKEY},)
	$(error FP8_GIT_SSHKEY env must exist pointing to a ssh key that can access git repo.)
endif
	@echo "- Copying ${FP8_GIT_SSHKEY} file"
	@cp ${FP8_GIT_SSHKEY} $@

$(IMAGE_BUILD_CHECK) : $(SSH_KEY_FILE) $(YARN_CACHE)
ifeq ($(shell which docker),)
	$(error docker command needed to be installed.)
endif
	@echo "- Building $(IMAGE_NAME)"
	@docker build \
		--build-arg userId=$(CUR_USER_ID) \
		--build-arg groupId=$(CUR_GROUP_ID) \
		-f $(LOCAL_DIR)/Dockerfile.local -t $(IMAGE_NAME) $(ROOT_DIR)/
	touch $@

setup-local : $(IMAGE_BUILD_CHECK)

connect-local : $(IMAGE_BUILD_CHECK)
	@echo "- Creating $(CONTAINER_NAME) from $(IMAGE_NAME)"
	@docker run --rm \
		-v $(YARN_CACHE):/var/cache/yarn \
		-u $(CUR_USER_ID):$(CUR_GROUP_ID) \
		--name $(CONTAINER_NAME) -it $(IMAGE_NAME) /bin/sh

connect-local-root : $(IMAGE_BUILD_CHECK)
	@echo "- Creating $(CONTAINER_NAME) from $(IMAGE_NAME)"
	@docker run --rm \
		-v $(YARN_CACHE):/var/cache/yarn \
		--name $(CONTAINER_NAME) -it $(IMAGE_NAME) /bin/sh

clean-local :
ifneq ($(CONTAINER_ID),)
	@echo "### Removing docker container $(CONTAINER_ID)"
	@docker rm $(CONTAINER_ID)
endif
ifneq ($(IMAGE_ID),)
	@echo "### Removing docker image $(IMAGE_ID)"
	@docker rmi $(IMAGE_ID)
endif
	rm -rf $(BUILD_DIR)

# ------------------
# DEFINE PHONY TARGET: Basically all targets
.PHONY : \
	setup-local connect-local connect-local-root clean-local
